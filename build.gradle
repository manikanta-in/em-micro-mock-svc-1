plugins {
    id 'org.springframework.boot' version '2.5.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.springframework.cloud.contract' version '3.0.4'
    id 'maven-publish'
    id 'java'
}

group = 'eymed.web.svc'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'


repositories {
    mavenCentral()
    mavenLocal()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url "https://repo.spring.io/release" }
}

ext {
    set('json-path.version', '2.6.0')
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2020.0.4"
    }
}

dependencies {
   // implementation ("org.springframework.boot:spring-boot-starter-data-r2dbc")
    implementation 'org.springframework.boot:spring-boot-starter-web'
   // implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    //implementation("org.springframework.boot:spring-boot-starter-data-elasticsearch")
    implementation("org.springframework.boot:spring-boot-starter-cache")
    implementation("org.springframework.boot:spring-boot-starter-data-redis")
// https://mvnrepository.com/artifact/com.oracle/ojdbc14
    // https://mvnrepository.com/artifact/com.oracle.database.jdbc/ojdbc10
    implementation 'com.oracle.database.jdbc:ojdbc10:19.13.0.0'
    implementation 'org.springframework.retry:spring-retry'
// https://mvnrepository.com/artifact/org.jeasy/easy-random
    implementation 'org.jeasy:easy-random:5.0.0'
// https://mvnrepository.com/artifact/org.jeasy/easy-random-core
    implementation 'org.jeasy:easy-random-core:5.0.0'


// https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-ui
    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.4'

    // implementation 'org.springdoc:springdoc-openapi-webflux-ui:1.5.11'
    implementation group: 'joda-time', name: 'joda-time', version: '2.10.12'
// https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-contract-stub-runner
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-contract-stub-runner', version: '3.0.4'

    // https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-ui
  //  implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.5.12'

    // https://mvnrepository.com/artifact/commons-validator/commons-validator
    implementation group: 'commons-validator', name: 'commons-validator', version: '1.7'

    // https://mvnrepository.com/artifact/org.apache.velocity/velocity
    implementation group: 'org.apache.velocity', name: 'velocity', version: '1.7'
    // https://mvnrepository.com/artifact/commons-io/commons-io
    implementation group: 'commons-io', name: 'commons-io', version: '2.6'
// https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.8'
// https://mvnrepository.com/artifact/commons-io/commons-io
    implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
// https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload
    implementation 'commons-fileupload:commons-fileupload:1.4'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    implementation fileTree(dir: 'libs', include: '*.jar')
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation("org.springframework.restdocs:spring-restdocs-mockmvc")
    testImplementation("org.springframework.cloud:spring-cloud-starter-contract-verifier")
    testImplementation("org.springframework.cloud:spring-cloud-contract-wiremock")
}

test {
    useJUnitPlatform()
}


// we want to override the default Spring Cloud Contract behaviour and generate JAR in a custom way
task stubsJar(type: Jar) {
    archiveClassifier = "stubs"
    into('/') {
        include('**/com/example/model/*.*')
        from("${project.rootDir}/src/main/java/")
    }
    into('/') {
        include('**/com/example/model/*.*')
        from("${project.buildDir}/classes/main")
    }
    into("META-INF/${project.group}/${project.name}/${project.version}/mappings") {
        include('**/*.*')
        from("${project.rootDir}/target/snippets/stubs")
    }
    into("META-INF/${project.group}/${project.name}/${project.version}/contracts") {
        include('**/*.groovy')
        from("${project.rootDir}/src/test/resources/contracts")
    }
}
// we need the tests to pass to build the stub jar
stubsJar.dependsOn(test)

publishing {
    publications {
        myPublicationName(MavenPublication) {
            artifact stubsJar
        }
    }
}